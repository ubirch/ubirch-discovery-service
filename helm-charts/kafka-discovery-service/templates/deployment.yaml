apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "thischart.fullname" . }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "thischart.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ template "thischart.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: discovery-srv
          image: "ubirch/discovery-kafka-service:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
            - containerPort: 9010
          resources:
            requests:
              cpu: 0.5
              memory: 0.3Gi
            limits:
              cpu: 1
              memory: 0.5Gi
          readinessProbe:
            httpGet:
              path: "/health/ready"
              port: 8888
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: "/health/live"
              port: 8888
            initialDelaySeconds: 20
            periodSeconds: 60
          env:
            - name: DISC_ENV_KAFKA_CONS_BOOTSTRAP
              value: {{ .Values.discoveryservice.kafka.bootstrapServers | quote }}
            - name: DISC_ENV_KAFKA_CONS_TOPIC
              value: {{ .Values.discoveryservice.kafka.consumer.topics | quote }}
            - name: DISC_ENV_KAFKA_CONS_GROUPID
              value: {{ .Values.discoveryservice.kafka.consumer.group | quote }}
            - name: DISC_ENV_KAFKA_CONS_ERRORTOPIC
              value: {{ .Values.discoveryservice.kafka.consumer.errorTopic | quote }}
            - name: DISC_ENV_KAFKA_CONS_TIMEOUT
              value: {{ .Values.discoveryservice.kafka.timeout | quote }}
            - name: DISC_ENV_KAFKA_CONS_POOLREC
              value: {{ .Values.discoveryservice.kafka.consumer.poolRecords | quote }}
            - name: DISC_ENV_KAFKA_PROD_BOOTSTRAP
              value: {{ .Values.discoveryservice.kafka.bootstrapServers | quote }}
            - name: DISC_ENV_KAFKA_PROD_ERRORTOPIC
              value: {{ .Values.discoveryservice.kafka.producer.errorTopic | quote }}
            - name: DISC_ENV_KAFKA_PROD_TOPIC
              value: {{ .Values.discoveryservice.kafka.producer.topics | quote }}
            - name: DISC_ENV_KAFKA_PROD_TIMEOUT
              value: {{ .Values.discoveryservice.kafka.timeout | quote }}
            - name: DISC_ENV_KAFKA_GREM_ASYNC
              value: {{ .Values.discoveryservice.kafka.gremlinConf.asynchronousBatchSize | quote }}
            - name: DISC_ENV_KAFKA_PROMETHEUS
              value: {{ .Values.discoveryservice.prometheus.port | quote }}
            - name: DISC_ENV_CORE_HOSTS
              value: {{ .Values.discoveryservice.core.hosts | quote }}
            - name: DISC_ENV_CORE_PORT
              value: {{ .Values.discoveryservice.core.port | quote }}
            - name: DISC_ENV_CORE_COONPOOL_RECONINTERVAL
              value: {{ .Values.discoveryservice.core.connectionPool.reconnectInterval | quote }}
            - name: DISC_ENV_CORE_COONPOOL_MAXWAITCONNECTION
              value: {{ .Values.discoveryservice.core.connectionPool.maxWaitForConnection | quote }}
            - name: DISC_ENV_KAFKA_PROMETHEUS_NAMESPACE
              value: {{ .Values.discoveryservice.prometheus.namespace | quote }}
            - name: DISC_ENV_KAFKA_HEALTHCHECK_ENABLED
              value: "true"
            - name: DISC_ENV_KAFKA_HEALTHCHECK_PORT
              value: "8888"

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
