<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- info -->
    <groupId>com.ubirch.discovery</groupId>
    <artifactId>discovery-service</artifactId>
    <version>0.1.1</version>
    <packaging>pom</packaging>

    <organization>
        <name>ubirch GmbH</name>
        <url>https://ubirch.com/</url>
    </organization>
    <developers>
        <developer>
            <name>Benoit George</name>
            <email>benoit.george@ubirch.com</email>
            <organization>ubirch GmbH</organization>
            <organizationUrl>https://ubirch.com/</organizationUrl>
        </developer>
        <developer>
            <name>Carlos SÃ¡nchez</name>
            <email>carlos.sanchez@ubirch.com</email>
            <organization>ubirch GmbH</organization>
            <organizationUrl>https://ubirch.com/</organizationUrl>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:git://github.com/ubirch/ubirch-discovery-service.git</connection>
        <developerConnection>scm:git:git@github.com:ubirch/ubirch-discovery-service.git</developerConnection>
        <url>https://github.com/ubirch/ubirch-discovery-service</url>
        <tag>HEAD</tag>
    </scm>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <repositories>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </repository>
    </repositories>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <encoding>UTF-8</encoding>

        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>

        <!-- versions -->

        <scala.logging.version>3.9.0</scala.logging.version>
        <typesafe.config>1.3.4</typesafe.config>
        <slf4j.api.version>1.7.15</slf4j.api.version>
        <logback-classic.version>1.2.3</logback-classic.version>
        <log4j-over-slf4j.version>1.7.25</log4j-over-slf4j.version>
        <jcl-over-slf4j.version>1.7.25</jcl-over-slf4j.version>
        <logstash-logback-encoder.version>5.3</logstash-logback-encoder.version>

        <scala.version>2.12.8</scala.version>
        <scala.compat.version>2.12</scala.compat.version>

        <scalatest.version>2.6.5</scalatest.version>
        <scalatra.version>2.6.5</scalatra.version>
        <scalactic.version>3.0.5</scalactic.version>
        <scalatraSwagger.version>2.6.5</scalatraSwagger.version>

        <javaxServlet.version>3.1.0</javaxServlet.version>

        <json4s.version>3.5.2</json4s.version>
        <embedded-kafka>2.3.0</embedded-kafka>

        <gremlinScala.version>3.4.1.4</gremlinScala.version>
        <janusGraph.version>0.3.1</janusGraph.version>
        <tinkerPopDriver.version>3.3.3</tinkerPopDriver.version>
        <tinkerPopJava.version>2.6.0</tinkerPopJava.version>

        <jodaTime.version>2.10</jodaTime.version>
        <jodaConverter.version>2.1.1</jodaConverter.version>


        <!-- plugins -->
        <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
        <scalariform.version>0.2.2</scalariform.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <!-- /plugins -->
        <ubirchKafka.version>1.2.8-SNAPSHOT</ubirchKafka.version>

        <!-- /versions -->

    </properties>

    <!-- dependencies -->

    <dependencies>

        <!-- Scala -->

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <!-- Scala -->

        <!-- Logging -->

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.api.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.slf4j/log4j-over-slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${log4j-over-slf4j.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${jcl-over-slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging_${scala.compat.version}</artifactId>
            <version>${scala.logging.version}</version>
        </dependency>

        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>${typesafe.config}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/net.logstash.logback/logstash-logback-encoder -->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback-encoder.version}</version>
        </dependency>

        <!-- /Logging -->

        <!-- Scalatra -->

        <dependency>
            <groupId>org.scalatra</groupId>
            <artifactId>scalatra_2.12</artifactId>
            <version>${scalatra.version}</version>
        </dependency>

        <dependency>
            <groupId>org.scalatra</groupId>
            <artifactId>scalatra-scalatest_${scala.compat.version}</artifactId>
            <version>${scalatest.version}</version>
        </dependency>

        <dependency>
            <groupId>org.scalactic</groupId>
            <artifactId>scalactic_${scala.compat.version}</artifactId>
            <version>${scalactic.version}</version>
        </dependency>

        <dependency>
            <groupId>org.scalatra</groupId>
            <artifactId>scalatra-swagger_${scala.compat.version}</artifactId>
            <version>${scalatraSwagger.version}</version>
        </dependency>

        <!-- /Scalatra -->

        <!-- Javax servlet -->

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javaxServlet.version}</version>
        </dependency>

        <!-- /Javax servlet -->

        <!-- Json4s -->

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-native_${scala.compat.version}</artifactId>
            <version>${json4s.version}</version>
        </dependency>

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-jackson_${scala.compat.version}</artifactId>
            <version>${json4s.version}</version>
        </dependency>

        <!-- /Json4s -->

        <!-- Gremlin -->

        <dependency>
            <groupId>com.michaelpollmeier</groupId>
            <artifactId>gremlin-scala_${scala.compat.version}</artifactId>
            <version>${gremlinScala.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tinkerpop</groupId>
            <artifactId>gremlin-driver</artifactId>
            <version>${tinkerPopDriver.version}</version>
        </dependency>

        <dependency>
            <groupId>com.tinkerpop.gremlin</groupId>
            <artifactId>gremlin-java</artifactId>
            <version>${tinkerPopJava.version}</version>
        </dependency>

        <dependency>
            <groupId>org.janusgraph</groupId>
            <artifactId>janusgraph-core</artifactId>
            <version>${janusGraph.version}</version>
        </dependency>

        <!-- /Gremlin -->

        <!-- Joda -->

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${jodaTime.version}</version>
        </dependency>

        <dependency>
            <groupId>org.joda</groupId>
            <artifactId>joda-convert</artifactId>
            <version>${jodaConverter.version}</version>
        </dependency>

        <!-- /Joda -->

        <!-- Ubirch -->
        <dependency>
            <groupId>com.ubirch</groupId>
            <artifactId>event-log-kafka</artifactId>
            <version>${ubirchKafka.version}</version>
        </dependency>
        <!-- /Ubirch -->

    </dependencies>


    <build>
        <plugins>


            <!-- code formatting -->
            <plugin>
                <groupId>com.github.tashoyan</groupId>
                <artifactId>scalariform-maven-plugin</artifactId>
                <version>${scalariform.version}</version>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <configuration>
                            <firstArgumentOnNewline>Force</firstArgumentOnNewline>
                            <firstParameterOnNewline>Force</firstParameterOnNewline>
                            <allowParamGroupsOnNewlines>true</allowParamGroupsOnNewlines>
                            <danglingCloseParenthesis>Force</danglingCloseParenthesis>
                            <doubleIndentConstructorArguments>true</doubleIndentConstructorArguments>
                            <doubleIndentMethodDeclaration>true</doubleIndentMethodDeclaration>
                            <newlineAtEndOfFile>true</newlineAtEndOfFile>
                            <placeScaladocAsterisksBeneathSecondAsterisk>true
                            </placeScaladocAsterisksBeneathSecondAsterisk>
                            <singleCasePatternOnNewline>false</singleCasePatternOnNewline>
                            <spacesAroundMultiImports>true</spacesAroundMultiImports>
                            <rewriteArrowSymbols>false</rewriteArrowSymbols>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- code formatting -->


            <!-- copy all dependencies into the target/lib dir for our docker image -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- for mvn deploy to work, disable the default deploy plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

        </plugins>
    </build>


    <!-- sub modules -->
    <modules>
        <module>discovery-core-service</module>
        <module>discovery-kafka-service</module>
        <module>discovery-rest-service</module>
        <module>discovery-docker-jg-service</module>
    </modules>

</project>
